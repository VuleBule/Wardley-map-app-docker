version: '3.8'
services:
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    environment:
      - DATABASE_URL=postgresql://app_user:app_password@db:5432/app_db
      - PORT=8000
      - HOST=0.0.0.0
      - NODE_ENV=development
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - PORT=3000
      - NODE_ENV=development
      - WDS_SOCKET_PORT=0
    depends_on:
      - backend
    restart: unless-stopped

  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: app_db
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD: app_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app_user -d app_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
  frontend_node_modules:
  backend_node_modules:
